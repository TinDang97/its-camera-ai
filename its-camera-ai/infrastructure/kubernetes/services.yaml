# Services for ITS Camera AI System
# Network services for internal and external communication

apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "0.1.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: api
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: api-service-headless
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "0.1.0"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: api
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: ml-inference-service
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: ml-inference
    app.kubernetes.io/version: "0.1.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 300
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: ml-inference
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: camera-stream-service
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: stream-processor
    app.kubernetes.io/version: "0.1.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: stream-processor
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: event-processor-service
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: event-processor
    app.kubernetes.io/version: "0.1.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: event-processor
  ports:
  - name: http
    port: 8082
    targetPort: 8082
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
# PostgreSQL Services
apiVersion: v1
kind: Service
metadata:
  name: postgresql-primary
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
    app.kubernetes.io/version: "15"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
    protocol: TCP
  - name: metrics
    port: 9187
    targetPort: 9187
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-primary-headless
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
    app.kubernetes.io/version: "15"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
    protocol: TCP

---
# Redis Services
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
    app.kubernetes.io/version: "7.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  - name: metrics
    port: 9121
    targetPort: 9121
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-master-headless
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
    app.kubernetes.io/version: "7.0"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-replica
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: replica
    app.kubernetes.io/version: "7.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: replica
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  - name: metrics
    port: 9121
    targetPort: 9121
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-replica-headless
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: replica
    app.kubernetes.io/version: "7.0"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: replica
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP

---
# Load Balancer Service for External Access
apiVersion: v1
kind: Service
metadata:
  name: api-loadbalancer
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "6"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8000
    protocol: TCP

---
# Service for ML Inference Load Balancing
apiVersion: v1
kind: Service
metadata:
  name: ml-inference-loadbalancer
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: ml-loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 10.0.0.0/8   # Internal network only
  - 172.16.0.0/12
  - 192.168.0.0/16
  selector:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: ml-inference
  ports:
  - name: inference
    port: 8080
    targetPort: 8080
    protocol: TCP
