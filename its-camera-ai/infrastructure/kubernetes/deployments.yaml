# Deployments for ITS Camera AI System
# Main application deployments with high availability

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: its-camera-ai
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: its-camera-ai
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: its-camera-ai-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: its-camera-ai/api:0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secrets
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/component: api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-inference-deployment
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: ml-inference
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 6
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: its-camera-ai
      app.kubernetes.io/component: ml-inference
  template:
    metadata:
      labels:
        app.kubernetes.io/name: its-camera-ai
        app.kubernetes.io/component: ml-inference
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: its-camera-ai-ml
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      nodeSelector:
        workload: ml-inference
        gpu-type: nvidia-t4
      tolerations:
      - key: gpu
        operator: Equal
        value: ml-inference
        effect: NoSchedule
      containers:
      - name: ml-inference
        image: its-camera-ai/ml-inference:0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        envFrom:
        - configMapRef:
            name: ml-inference-config
        - secretRef:
            name: api-secrets
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
            nvidia.com/gpu: 1
          limits:
            cpu: 4000m
            memory: 8Gi
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 60
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: models
          mountPath: /models
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: shm
          mountPath: /dev/shm
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: ml-models-pvc
      - name: tmp
        emptyDir: {}
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: 2Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - ml-inference
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/component: ml-inference

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: camera-stream-processor
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: stream-processor
    app.kubernetes.io/version: "0.1.0"
  annotations:
    config.alpha.kubernetes.io/checksum: "redis-queue-config"
spec:
  replicas: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: its-camera-ai
      app.kubernetes.io/component: stream-processor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: its-camera-ai
        app.kubernetes.io/component: stream-processor
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: its-camera-ai-stream
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: stream-processor
        image: its-camera-ai/stream-processor:0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        - containerPort: 50051
          name: grpc
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: MAX_CONCURRENT_STREAMS
          value: "10"
        # Redis Queue Configuration
        - name: REDIS_URL
          value: "redis://redis-streams:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: INPUT_QUEUE
          value: "camera_frames"
        - name: OUTPUT_QUEUE
          value: "processed_frames"
        - name: QUEUE_POOL_SIZE
          value: "20"
        # gRPC Configuration
        - name: ENABLE_GRPC_COMPRESSION
          value: "true"
        - name: GRPC_COMPRESSION_FORMAT
          value: "jpeg"
        - name: GRPC_COMPRESSION_QUALITY
          value: "85"
        # Performance Settings
        - name: BATCH_SIZE
          value: "20"
        - name: PROCESSING_TIMEOUT
          value: "5.0"
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secrets
        resources:
          requests:
            cpu: 2000m  # Increased for Redis Streams processing
            memory: 4Gi  # Increased for gRPC serialization
          limits:
            cpu: 6000m  # Higher limits for burst processing
            memory: 8Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: stream-cache
          mountPath: /cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: stream-cache
        emptyDir:
          sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - stream-processor
              topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-processor
  namespace: its-camera-ai
  labels:
    app.kubernetes.io/name: its-camera-ai
    app.kubernetes.io/component: event-processor
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: its-camera-ai
      app.kubernetes.io/component: event-processor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: its-camera-ai
        app.kubernetes.io/component: event-processor
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: its-camera-ai-events
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: event-processor
        image: its-camera-ai/event-processor:0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secrets
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 3Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8082
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - event-processor
              topologyKey: kubernetes.io/hostname
